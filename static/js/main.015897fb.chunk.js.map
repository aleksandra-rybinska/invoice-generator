{"version":3,"sources":["AppContext.js","components/SellerSwitch.js","components/PositionsForm.js","components/InvoiceForm.js","components/PositionsTable.js","components/InvoiceDetails.js","components/SellerDetails.js","components/ClientDetails.js","components/Notes.js","components/PaymentDetails.js","components/Sing.js","components/ComponentToPrint.js","App.js","index.js"],"names":["AppContext","createContext","AppProvider","_ref","children","invoiceData","setInvoiceData","useLocalStorage","invoicePosition","setInvoicePosition","seller","setSeller","useState","positionsList","setPositionsList","value","updateInvoiceData","e","_objectSpread","target","name","updateInvoicePosition","updatePositionsList","newPosition","id","uuidv4","description","jm","quantity","price","amount","_jsx","Provider","useInvoice","useContext","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","log","valueToStore","Function","setItem","stringify","SellerSwitch","handleSellerChange","_jsxs","className","type","checked","onChange","htmlFor","PositionsForm","useEffect","parseFloat","toFixed","onSubmit","placeholder","n","test","onClick","handleDelete","forEach","k","removeItem","location","reload","InvoiceForm","invNum","invDate","endDate","clientName","clientAddress1","clientAddress2","clientNip","rows","notes","inWords","payed","payedDate","PositionsTable","totalAmount","reduce","acc","map","index","InvoiceDetails","SellerDetails","ClientDetails","Notes","PaymentDetails","Sing","ComponentToPrint","React","forwardRef","props","ref","App","showInvoice","setShowInvoice","toggleShowInvoice","componentRef","useRef","handlePrint","useReactToPrint","content","current","_Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.015897fb.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [invoiceData, setInvoiceData] = useLocalStorage(\"invoiceData\", []);\n  const [invoicePosition, setInvoicePosition] = useLocalStorage(\n    \"invoicePosition\",\n    []\n  );\n  const [seller, setSeller] = useState(\"roman\");\n  const [positionsList, setPositionsList] = useLocalStorage(\n    \"positionsList\",\n    []\n  );\n\n  const updateInvoiceData = (e) => {\n    setInvoiceData({\n      ...invoiceData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const updateInvoicePosition = (e) => {\n    setInvoicePosition({\n      ...invoicePosition,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const updatePositionsList = () => {\n    const newPosition = {\n      id: uuidv4(),\n      description: invoicePosition.description,\n      jm: invoicePosition.jm,\n      quantity: invoicePosition.quantity,\n      price: invoicePosition.price,\n      amount: invoicePosition.amount,\n    };\n\n    setPositionsList([...positionsList, newPosition]);\n    setInvoicePosition([]);\n  };\n\n  const value = {\n    invoiceData,\n    updateInvoiceData,\n    invoicePosition,\n    updateInvoicePosition,\n    updatePositionsList,\n    seller,\n    setSeller,\n    positionsList,\n    setInvoicePosition,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\nexport const useInvoice = () => {\n  return useContext(AppContext);\n};\n\n// Local storage hook: https://usehooks.com/useLocalStorage/?fbclid=IwAR0h5qXIzD8JAptCbqrKaFCbTsFQgROa7_f51GKzoCNjjYPQ7Ln9EurFcLs\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport { useInvoice } from \"../AppContext\";\n\nconst SellerSwitch = () => {\n  const { seller, setSeller } = useInvoice();\n  const handleSellerChange = (name) => {\n    setSeller(() => name);\n  };\n  return (\n    <div className=\"sellerswitch\">\n      <h3>Wybierz sprzedawcę:</h3>\n      <fieldset>\n        <span>\n          <input\n            type=\"radio\"\n            name=\"seller\"\n            value=\"roman\"\n            id=\"roman\"\n            checked={seller === \"roman\"}\n            onChange={() => handleSellerChange(\"roman\")}\n          />\n          <label htmlFor=\"roman\">Roman</label>\n        </span>\n        <span>\n          <input\n            type=\"radio\"\n            name=\"seller\"\n            value=\"jolanta\"\n            id=\"jolanta\"\n            checked={seller === \"jolanta\"}\n            onChange={() => handleSellerChange(\"jolanta\")}\n          />\n          <label htmlFor=\"jolanta\">Jolanta</label>\n        </span>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default SellerSwitch;\n","import { useEffect } from \"react\";\nimport { useInvoice } from \"../AppContext\";\nimport SellerSwitch from \"./SellerSwitch\";\n\nconst PositionsForm = () => {\n  const {\n    invoicePosition,\n    updateInvoicePosition,\n    updatePositionsList,\n    setInvoicePosition,\n  } = useInvoice();\n\n  useEffect(() => {\n    const calculateAmount = (amount) => {\n      setInvoicePosition({\n        ...invoicePosition,\n        amount: (\n          parseFloat(invoicePosition.price) *\n          parseFloat(invoicePosition.quantity)\n        ).toFixed(2),\n      });\n    };\n\n    calculateAmount(invoicePosition.amount);\n  }, [invoicePosition.amount, invoicePosition.price, invoicePosition.quantity]);\n\n  function isNumber(n) {\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\n  }\n\n  const handleDelete = () => {\n    let keysToRemove = [\"invoicePosition\", \"positionsList\"];\n    keysToRemove.forEach((k) => localStorage.removeItem(k));\n    window.location.reload();\n  };\n\n  return (\n    <form className=\"form\" onSubmit={updatePositionsList}>\n      <div className=\"form-row\">\n        <label>Nazwa towaru / usługi:</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"nazwa usługi\"\n          value={invoicePosition.description}\n          onChange={updateInvoicePosition}\n        />\n      </div>\n      <div className=\"form-row\">\n        <label>Jm:</label>\n        <input\n          type=\"text\"\n          id=\"jm\"\n          name=\"jm\"\n          placeholder=\"np. szt\"\n          value={invoicePosition.jm}\n          onChange={updateInvoicePosition}\n        />\n      </div>\n      <div className=\"form-row\">\n        <label>Ilość *:</label>\n        <input\n          type=\"text\"\n          id=\"quantity\"\n          name=\"quantity\"\n          placeholder=\"ilość\"\n          value={invoicePosition.quantity}\n          onChange={updateInvoicePosition}\n        />\n      </div>\n      <div className=\"form-row\">\n        <label>Cena jednostkowa *:</label>\n        <input\n          type=\"text\"\n          id=\"price\"\n          name=\"price\"\n          placeholder=\"cena jednostkowa\"\n          value={invoicePosition.price}\n          onChange={updateInvoicePosition}\n        />\n      </div>\n      <div className=\"form-row\">\n        <label>Wartość:</label>\n        <p>\n          {isNumber(invoicePosition.amount) ? invoicePosition.amount : \"\"}\n          &nbsp;PLN\n        </p>\n      </div>\n      <div className=\"form-annotation\">\n        <h4>\n          * Wpisując wartości dziesiętne należy użyć KROPKI zamiast przecinka\n          <br /> (np. 1.99)\n        </h4>\n      </div>\n      <div className=\"form-button-container\">\n        <button type=\"submit\">DODAJ POZYCJĘ</button>\n        <button type=\"reset\" onClick={handleDelete}>\n          USUŃ WSZYSTKIE POZYCJE\n        </button>\n      </div>\n      <SellerSwitch />\n    </form>\n  );\n};\n\nexport default PositionsForm;\n","import { useInvoice } from '../AppContext';\n\nconst InvoiceForm = () => {\n    const { invoiceData, updateInvoiceData } = useInvoice();\n\n    return (\n        <form className='form'>\n            <div className='form-row'>\n                <label>Numer faktury:</label>\n                <input\n                    type='text'\n                    id='text'\n                    name='invNum'\n                    placeholder='nr faktury'\n                    value={invoiceData.invNum}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Data wystawienia:</label>\n                <input\n                    type='date'\n                    id='text'\n                    name='invDate'\n                    value={invoiceData.invDate}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Data zakończenia usługi:</label>\n                <input\n                    type='date'\n                    id='text'\n                    name='endDate'\n                    value={invoiceData.endDate}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Nazwa klienta:</label>\n                <input\n                    type='text'\n                    id='text'\n                    name='clientName'\n                    value={invoiceData.clientName}\n                    placeholder='nazwa firmy'\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Adres klienta - ulica i nr:</label>\n                <input\n                    type='text'\n                    id='text'\n                    name='clientAddress1'\n                    value={invoiceData.clientAddress1}\n                    placeholder='ulica'\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Kod pocztowy i miejscowość:</label>\n                <input\n                    type='text'\n                    id='text'\n                    name='clientAddress2'\n                    value={invoiceData.clientAddress2}\n                    placeholder='kod pocztowy i miejscowość'\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>NIP:</label>\n                <input\n                    type='text'\n                    id='text'\n                    name='clientNip'\n                    value={invoiceData.clientNip}\n                    placeholder='NIP klienta'\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Uwagi:</label>\n                <textarea\n                    id='text'\n                    name='notes'\n                    placeholder='uwagi'\n                    rows='7'\n                    value={invoiceData.notes}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Słownie do zapłaty:</label>\n                <input\n                    id='text'\n                    name='inWords'\n                    placeholder='słownie'\n                    value={invoiceData.inWords}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Sposób zapłaty:</label>\n                <input\n                    id='text'\n                    name='payed'\n                    placeholder='sposób zapłaty'\n                    value={invoiceData.payed}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n            <div className='form-row'>\n                <label>Data zapłaty:</label>\n                <input\n                    type='date'\n                    id='text'\n                    name='payedDate'\n                    value={invoiceData.payedDate}\n                    onChange={updateInvoiceData}\n                />\n            </div>\n        </form>\n    );\n};\n\nexport default InvoiceForm;\n","import { useInvoice } from '../AppContext';\n\nconst PositionsTable = () => {\n    const { positionsList } = useInvoice();\n    const totalAmount = positionsList\n        .reduce((acc, item) => acc + item.price * item.quantity, 0)\n        .toFixed(2);\n\n    return (\n        <section className='grid'>\n            <div className='grid-row'>\n                <p>\n                    <b>Lp.</b>\n                </p>\n                <p>\n                    <b>Nazwa towaru lub usługi</b>\n                </p>\n                <p>\n                    <b>Jm</b>\n                </p>\n                <p>\n                    <b>Ilość</b>\n                </p>\n                <p>\n                    <b>Cena jedn. w PLN</b>\n                </p>\n                <p>\n                    <b>Wartość w PLN</b>\n                </p>\n            </div>\n\n            {positionsList.map((item, index) => {\n                return (\n                    <div key={item.id} className='grid-row'>\n                        <p>{index + 1}</p>\n                        <p>{item.description}</p>\n                        <p>{item.jm}</p>\n                        <p>{item.quantity}</p>\n                        <p>{item.price}</p>\n                        <p>{item.amount}</p>\n                    </div>\n                );\n            })}\n            <div className='total'>\n                <h2>\n                    Razem do zapłaty:&nbsp;&nbsp;\n                    {totalAmount}\n                    &nbsp;PLN\n                </h2>\n            </div>\n        </section>\n    );\n};\n\nexport default PositionsTable;\n","import { useInvoice } from '../AppContext';\n\nconst InvoiceDetails = () => {\n    const { invoiceData } = useInvoice();\n    return (\n        <section className='date'>\n            <ul>\n                <li>\n                    <h1>Faktura</h1>\n                </li>\n                <li>\n                    <p>\n                        nr: &nbsp;\n                        {invoiceData.invNum}\n                    </p>\n                </li>\n                <li>\n                    <p>\n                        Wystawiona w dniu: &nbsp;{invoiceData.invDate},\n                        Częstochowa\n                    </p>\n                </li>\n                <li>\n                    <p>Data zakończenia usługi: &nbsp;{invoiceData.endDate}</p>\n                </li>\n            </ul>\n        </section>\n    );\n};\n\nexport default InvoiceDetails;\n","import { useInvoice } from \"../AppContext\";\n\nconst SellerDetails = () => {\n  const { seller } = useInvoice();\n  return (\n    <div className=\"details-container\">\n      <h2 className=\"details-title\">Sprzedawca</h2>\n      <p>\n        {seller === \"roman\"\n          ? `\"RJR\" ROMAN RYBIŃSKI - usługi, produkcja i montaże`\n          : \"RJR JOLANTA RYBIŃSKA\"}\n      </p>\n      <p>ul. Michała Faradaya 54</p>\n      <p>42-202 Częstochowa</p>\n      <p>NIP: {seller === \"roman\" ? \"6271485538\" : \"6271485567\"}</p>\n      {seller === \"roman\" && <p>Nr konta: 53 1140 2004 0000 3202 8126 1869</p>}\n    </div>\n  );\n};\nexport default SellerDetails;\n","import { useInvoice } from '../AppContext';\n\nconst ClientDetails = () => {\n    const { invoiceData } = useInvoice();\n\n    return (\n        <div className='details-container'>\n            <h2 className='details-title'>Nabywca</h2>\n            <p>{invoiceData.clientName}</p>\n            <p>{invoiceData.clientAddress1}</p>\n            <p>{invoiceData.clientAddress2}</p>\n            <p>NIP:{invoiceData.clientNip}</p>\n        </div>\n    );\n};\nexport default ClientDetails;\n","import { useInvoice } from '../AppContext';\n\nconst Notes = () => {\n    const { positionsList } = useInvoice();\n    return (\n        <div className='notes'>\n            <section className='notes-container'>\n                <p>Uwagi:</p>\n                <p>{positionsList.notes}</p>\n            </section>\n        </div>\n    );\n};\n\nexport default Notes;\n","import { useInvoice } from '../AppContext';\n\nconst PaymentDetails = () => {\n    const { invoiceData } = useInvoice();\n    return (\n        <div className='payments-container'>\n            <p>słownie:&nbsp;{invoiceData.inWords}</p>\n            <p>sposób zapłaty:&nbsp;{invoiceData.payed} </p>\n            <p>data zapłaty:&nbsp;{invoiceData.payedDate}</p>\n        </div>\n    );\n};\n\nexport default PaymentDetails;\n","const Sing = () => {\n    return (\n        <div className='sign'>\n            <div className='sign-container'>\n                <p>Podpis osoby uprawnionej do wystawienia faktury</p>\n            </div>\n            <div className='sign-container'>\n                <p>Podpis osoby uprawnionej do odbioru faktury</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Sing;\n","import React from 'react';\nimport InvoiceDetails from './InvoiceDetails';\nimport SellerDetails from './SellerDetails';\nimport ClientDetails from './ClientDetails';\nimport Notes from './Notes';\nimport PaymentDetails from './PaymentDetails';\nimport Sing from './Sing';\nimport PositionsTable from './PositionsTable';\n\nexport const ComponentToPrint = React.forwardRef((props, ref) => {\n    return (\n        <div ref={ref} className='print'>\n            <InvoiceDetails />\n            <section className='details'>\n                <SellerDetails />\n                <ClientDetails />\n            </section>\n            <PositionsTable />\n            <div className='payments'>\n                <PaymentDetails />\n                <Notes />\n            </div>\n            <Sing />\n            <p className='annotation'>\n                Sprzedawca zwolniony podmiotowo z podatku od towarów i usług\n                [dostawa towarów lub świadczenie usług zwolnione na podstawie\n                art. 113 ust. 1(albo ust. 9) ustawy z dnia 11.03.2004 r. o\n                podatku od towarów i usług (Dz.U. z 2016r. poz. 710, z późn.\n                zm.)]\n            </p>\n        </div>\n    );\n});\n","import React, { useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport \"./styles.scss\";\nimport PositionsForm from \"./components/PositionsForm\";\nimport InvoiceForm from \"./components/InvoiceForm\";\nimport PositionsTable from \"./components/PositionsTable\";\nimport { ComponentToPrint } from \"./components/ComponentToPrint\";\n\nfunction App() {\n  const [showInvoice, setShowInvoice] = useState(false);\n  const toggleShowInvoice = () => setShowInvoice(!showInvoice);\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  return (\n    <>\n      {showInvoice ? (\n        <div className=\"flex\">\n          <menu className=\"menu\">\n            <button onClick={toggleShowInvoice}>WRÓĆ DO EDYCJI</button>\n            <button onClick={handlePrint}>DRUKUJ</button>\n          </menu>\n          <ComponentToPrint ref={componentRef} />\n        </div>\n      ) : (\n        <div className=\"wrapper\">\n          <section className=\"form-section\">\n            <InvoiceForm />\n            <PositionsForm />\n          </section>\n          <h3 className=\"ml\">Podgląd pozycji na fakturze:</h3>\n          <PositionsTable />\n\n          <button className=\"ml\" onClick={toggleShowInvoice}>\n            PODGLĄD FAKTURY\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './AppContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppProvider>\n            <App />\n        </AppProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}